{"version":3,"sources":["assets/images/add_playlist.svg","assets/images/loading.svg","assets/images/volume.svg","assets/images/shuffle.svg","assets/images/backward.svg","assets/images/play.svg","assets/images/pause.svg","assets/images/forward.svg","assets/images/repeat.svg","assets/images/search.svg","assets/images/close.svg","assets/images/clock.svg","assets/images/plus.svg","styles/global.js","store/ducks/playlists.js","components/Loading/styles.js","components/Sidebar/styles.js","components/Loading/index.js","components/Sidebar/index.js","store/ducks/player.js","components/Player/styles.js","components/Player/index.js","components/Header/styles.js","components/Header/index.js","store/ducks/error.js","components/ErrorBox/styles.js","components/ErrorBox/index.js","styles/components.js","pages/browse/styles.js","pages/browse/index.js","store/ducks/playlistDetails.js","pages/playlist/styles.js","pages/playlist/index.js","routes/index.js","services/api.js","store/sagas/playlists.js","store/sagas/playlistDetails.js","store/sagas/index.js","store/ducks/index.js","store/index.js","App.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","Types","GET_REQUEST","GET_SUCESS","INITIAL_STATE","data","loading","Creators","getPlaylistRequest","type","getPlaylistSucess","payload","rotate360","keyframes","Spinner","styled","img","Container","aside","Nav","ul","props","main","NewPlaylist","button","Loading","src","LoadingIcon","alt","Sidebar","this","playlists","to","href","map","playlist","key","id","title","AddPlaylistIcon","Component","connect","state","dispatch","bindActionCreators","PlaylistsActions","LOAD","PLAY","PAUSE","NEXT","PREV","PLAYING","HANDLE_POSITION","SET_POSITION","SET_VOLUME","currentSong","status","Sound","list","position","positionShow","duration","volume","loadSong","song","play","pause","next","prev","playing","handlePosition","percent","setPosition","setVolume","div","Current","Progress","Controls","Time","ProgressSlider","Volume","Player","player","progress","url","file","playStatus","onFinishedPlaying","onPlaying","thumbnail","author","ShuffleIcon","onClick","BackwardIcon","PauseIcon","PlayIcon","ForwardIcon","RepeatIcon","railStyle","background","borderRadius","trackStyle","handleStyle","border","max","onChange","value","onAfterChange","VolumeIcon","display","msToTime","seconds","parseInt","minutes","defaultProps","PlayerActions","header","Search","SearchIcon","User","Header","placeholder","SET","HIDE","visible","message","setError","hideError","error","ErrorActions","CloseIcon","Wrapper","Content","Title","h1","List","Playlist","Link","Browse","description","getPlaylistDetailsRequest","getPlaylistDetailsSucess","css","SongList","table","SongItem","tr","selected","loadPlaylistDetails","match","params","renderDetails","playlistDetails","selectedSong","songs","length","cellPadding","cellSpacing","ClockIcon","setState","onDoubleClick","PlusIcon","album","colSpan","prevProps","PlaylistDetailsActions","Routes","exact","path","component","api","axios","create","baseURL","getPlaylists","call","get","response","put","PlaylistActions","getPlaylistDetails","action","rootSaga","all","takeLatest","PlaylistsTypes","PlaylistDetailsTypes","combineReducers","PAUSED","currentIndex","findIndex","middlewares","sagaMiddleware","createSagaMiddleware","sagaMonitor","push","store","createStore","reducers","compose","applyMiddleware","run","sagas","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6302faf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add_playlist.3f6e21d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.3fd45499.svg\";","module.exports = __webpack_public_path__ + \"static/media/volume.6b27f592.svg\";","module.exports = __webpack_public_path__ + \"static/media/shuffle.54850ef4.svg\";","module.exports = __webpack_public_path__ + \"static/media/backward.198550c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.6557e51e.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.ee8bd067.svg\";","module.exports = __webpack_public_path__ + \"static/media/forward.63fca2af.svg\";","module.exports = __webpack_public_path__ + \"static/media/repeat.716dfa0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.75bed367.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.11413de0.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.52df934a.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.38b523e4.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport 'rc-slider/assets/index.css';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    outline: 0;\n  }\n  html, body, #root {\n    height: 100%;\n  }\n  body {\n    background-color: #181818;\n    color: #FFF;\n    font-family: 'Montserrat', sans-serif;\n    text-rendering: optimizeLegibility;\n  }\n  button {\n    cursor: pointer;\n  }\n`;\n\nexport default GlobalStyle;\n","export const Types = {\n  GET_REQUEST: 'playlists/GET_REQUEST',\n  GET_SUCESS: 'playlists/GET_SUCESS',\n};\n\nconst INITIAL_STATE = {\n  data: [],\n  loading: false,\n};\n\nexport default function playlists(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Types.GET_REQUEST:\n      return { ...state, loading: true };\n    case Types.GET_SUCESS:\n      return { ...state, loading: false, data: action.payload.data };\n    default:\n      return state;\n  }\n}\n\nexport const Creators = {\n  getPlaylistRequest: () => ({ type: Types.GET_REQUEST }),\n  getPlaylistSucess: (data) => ({\n    type: Types.GET_SUCESS,\n    payload: { data },\n  }),\n};\n","import styled, { keyframes } from 'styled-components';\n\nconst rotate360 = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg)\n  }\n`;\n\nexport const Spinner = styled.img`\n  animation: ${rotate360} 2s linear infinite\n`;\n","import styled from 'styled-components';\n\nimport { Spinner } from '../Loading/styles';\n\nexport const Container = styled.aside`\n  height: 100%;\n  width: 200px;\n  background-color: #121212;\n  color: #b3b3b3;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  > div {\n    padding: 25px;\n  }\n`;\n\nexport const Nav = styled.ul`\n  list-style: none;\n  margin-top: 25px;\n  &:first-child {\n    margin: 0;\n  }\n  li {\n    display: flex;\n    align-items: center;\n    a {\n      color: inherit;\n      text-decoration: none;\n      font-size: 13px;\n      line-height: 32px;\n      font-weight: ${(props) => (props.main ? 'bold' : 'normal')};\n      &:hover {\n        color: #fff;\n      }\n    }\n    span {\n      font-size: 11px;\n      text-transform: uppercase;\n      line-height: 22px;\n      letter-spacing: 1.11px;\n      font-weight: 300;\n    }\n\n    ${Spinner} {\n      height: 15px;\n      margin-left: 5px;\n    }\n  }\n`;\n\nexport const NewPlaylist = styled.button`\n  background: transparent;\n  border: 0;\n  border-top: 1px solid #282828;\n  font-size: 13px;\n  color: #b3b3b3;\n  display: flex;\n  align-items: center;\n  padding: 15px 25px;\n  &:hover {\n    color: #fff;\n  }\n  img {\n    margin-right: 10px;\n  }\n`;\n","import React from 'react';\n\nimport LoadingIcon from '../../assets/images/loading.svg';\nimport { Spinner } from './styles';\n\nconst Loading = () => <Spinner src={LoadingIcon} alt=\"Loading\" />;\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Creators as PlaylistsActions } from '../../store/ducks/playlists';\n\nimport { Container, NewPlaylist, Nav } from './styles';\nimport AddPlaylistIcon from '../../assets/images/add_playlist.svg';\nimport Loading from '../Loading';\n\nconst propTypes = {\n  getPlaylistRequest: PropTypes.func.isRequired,\n  playlists: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })),\n    loading: PropTypes.bool,\n  }).isRequired,\n};\n\nclass Sidebar extends Component {\n  componentDidMount() {\n    const { getPlaylistRequest } = this.props;\n    getPlaylistRequest();\n  }\n\n  render() {\n    const { playlists } = this.props;\n    return (\n      <Container>\n        <div>\n          <Nav main>\n            <li>\n              <Link to=\"/\">Browse</Link>\n            </li>\n            <li>\n              <a href=\"/\">Radio</a>\n            </li>\n          </Nav>\n          <Nav>\n            <li><span>Your Library</span></li>\n            <li>\n              <a href=\"/\">Your Daily Mix</a>\n            </li>\n            <li>\n              <a href=\"/\">Recent Played</a>\n            </li>\n            <li>\n              <a href=\"/\">Musics</a>\n            </li>\n            <li>\n              <a href=\"/\">Albums</a>\n            </li>\n            <li>\n              <a href=\"/\">Artists</a>\n            </li>\n            <li>\n              <a href=\"/\">Stations</a>\n            </li>\n            <li>\n              <a href=\"/\">Local Files</a>\n            </li>\n            <li>\n              <a href=\"/\">Videos</a>\n            </li>\n            <li>\n              <a href=\"/\">Podcasts</a>\n            </li>\n          </Nav>\n          <Nav>\n            <li>\n              <span>Playlists</span>\n              { playlists.loading && <Loading /> }\n            </li>\n            {playlists.data.map((playlist) => (\n              <li key={playlist.id}>\n                <Link to={`/playlists/${playlist.id}`}>{playlist.title}</Link>\n              </li>\n            ))}\n          </Nav>\n        </div>\n        <NewPlaylist>\n          <img src={AddPlaylistIcon} alt=\"Add Playlist\" />\n          New Playlist\n        </NewPlaylist>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playlists: state.playlists,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(PlaylistsActions, dispatch);\n\nSidebar.propTypes = propTypes;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import Sound from 'react-sound';\n\nexport const Types = {\n  LOAD: 'player/LOAD',\n  PLAY: 'player/PLAY',\n  PAUSE: 'player/PAUSE',\n  NEXT: 'player/NEXT',\n  PREV: 'player/PREV',\n  PLAYING: 'player/PLAYING',\n  HANDLE_POSITION: 'player/HANDLE_POSITION',\n  SET_POSITION: 'player/SET_POSITION',\n  SET_VOLUME: 'player/SET_VOLUME',\n};\n\nconst INITIAL_STATE = {\n  currentSong: null,\n  status: Sound.status.PLAYING,\n  list: [],\n  position: null,\n  positionShow: null,\n  duration: null,\n  volume: 100,\n};\n\nexport default function player(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Types.LOAD:\n      return {\n        ...state,\n        currentSong: action.payload.song,\n        list: action.payload.list,\n        status: Sound.status.PLAYING,\n      };\n    case Types.PLAY:\n      return { ...state, status: Sound.status.PLAYING };\n    case Types.PAUSE:\n      return { ...state, status: Sound.status.PAUSED };\n    case Types.NEXT: {\n      const currentIndex = state.list.findIndex((song) => song.id === state.currentSong.id);\n      const next = state.list[currentIndex + 1];\n      if (next) {\n        return {\n          ...state, currentSong: next, status: Sound.status.PLAYING, position: 0,\n        };\n      }\n      return state;\n    }\n    case Types.PREV: {\n      const currentIndex = state.list.findIndex((song) => song.id === state.currentSong.id);\n      const prev = state.list[currentIndex - 1];\n      if (prev) {\n        return {\n          ...state, currentSong: prev, status: Sound.status.PLAYING, position: 0,\n        };\n      }\n      return state;\n    }\n    case Types.PLAYING:\n      return { ...state, ...action.payload };\n    case Types.HANDLE_POSITION:\n      return { ...state, positionShow: state.duration * action.payload.percent };\n    case Types.SET_POSITION:\n      return { ...state, position: state.duration * action.payload.percent, positionShow: null };\n    case Types.SET_VOLUME:\n      return { ...state, volume: action.payload.volume };\n    default:\n      return state;\n  }\n}\n\nexport const Creators = {\n  loadSong: (song, list) => ({\n    type: Types.LOAD,\n    payload: { song, list },\n  }),\n  play: () => ({ type: Types.PLAY }),\n  pause: () => ({ type: Types.PAUSE }),\n  next: () => ({ type: Types.NEXT }),\n  prev: () => ({ type: Types.PREV }),\n  playing: ({ position, duration }) => ({\n    type: Types.PLAYING,\n    payload: { position, duration },\n  }),\n  handlePosition: (percent) => ({\n    type: Types.HANDLE_POSITION,\n    payload: { percent },\n  }),\n  setPosition: (percent) => ({\n    type: Types.SET_POSITION,\n    payload: { percent },\n  }),\n  setVolume: (volume) => ({\n    type: Types.SET_VOLUME,\n    payload: { volume },\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 72px;\n  display: flex;\n  justify-content: space-between;\n  background-color: #282828;\n  padding: 12px;\n`;\n\nexport const Current = styled.div`\n  width: 220px;\n  display: flex;\n  align-items: center;\n  img {\n    width: 48px;\n    height: 48px;\n  }\n  div {\n    margin-left: 12px;\n    display: flex;\n    flex-direction: column;\n  }\n  span {\n    font-size: 13px;\n    color: #fff;\n  }\n  small {\n    font-size: 11px;\n    color: #b3b3b3;\n    margin-top: 5px;\n  }\n`;\n\nexport const Progress = styled.div`\n  width: 580px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  align-items: center;\n  button {\n    background: transparent;\n    border: 0;\n    margin: 0 15px;\n  }\n`;\n\nexport const Time = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n  span {\n    font-size: 11px;\n    color: #b3b3b3;\n  }\n`;\n\nexport const ProgressSlider = styled.div`\n  width: 500px;\n  margin: 0 15px;\n`;\n\nexport const Volume = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100px;\n  margin-right: 20px;\n  img {\n    margin-right: 5px;\n  }\n`;\n","import React from 'react';\nimport Slider from 'rc-slider';\nimport Sound from 'react-sound';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Creators as PlayerActions } from '../../store/ducks/player';\n\n\nimport {\n  Container, Current, Progress, Controls, Volume, Time, ProgressSlider,\n} from './styles';\nimport VolumeIcon from '../../assets/images/volume.svg';\nimport ShuffleIcon from '../../assets/images/shuffle.svg';\nimport BackwardIcon from '../../assets/images/backward.svg';\nimport PlayIcon from '../../assets/images/play.svg';\nimport PauseIcon from '../../assets/images/pause.svg';\nimport ForwardIcon from '../../assets/images/forward.svg';\nimport RepeatIcon from '../../assets/images/repeat.svg';\n\nconst propTypes = {\n  player: PropTypes.shape({\n    currentSong: PropTypes.shape({\n      thumbnail: PropTypes.string,\n      title: PropTypes.string,\n      author: PropTypes.string,\n      file: PropTypes.string,\n    }),\n    status: PropTypes.string,\n    position: PropTypes.number,\n    volume: PropTypes.number,\n  }),\n  play: PropTypes.func.isRequired,\n  pause: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  prev: PropTypes.func.isRequired,\n  playing: PropTypes.func.isRequired,\n  position: PropTypes.string,\n  duration: PropTypes.string,\n  handlePosition: PropTypes.func.isRequired,\n  setPosition: PropTypes.func.isRequired,\n  positionShow: PropTypes.string,\n  progress: PropTypes.number.isRequired,\n  setVolume: PropTypes.func.isRequired,\n};\n\nconst Player = ({\n  player, play, pause, next, prev, playing, position, duration, handlePosition,\n  setPosition, positionShow, progress, setVolume,\n}) => (\n  <Container>\n    { !!player.currentSong && (\n      <Sound\n        url={player.currentSong.file}\n        playStatus={player.status}\n        onFinishedPlaying={next}\n        onPlaying={playing}\n        position={player.position}\n        volume={player.volume}\n      />\n    ) }\n    <Current>\n      { !!player.currentSong && (\n        <>\n          <img src={player.currentSong.thumbnail} alt={player.currentSong.title} />\n          <div>\n            <span>{player.currentSong.title}</span>\n            <small>{player.currentSong.author}</small>\n          </div>\n        </>\n      ) }\n\n    </Current>\n    <Progress>\n      <Controls>\n        <button type=\"button\">\n          <img src={ShuffleIcon} alt=\"Shuffle\" />\n        </button>\n        <button type=\"button\" onClick={prev}>\n          <img src={BackwardIcon} alt=\"Shuffle\" />\n        </button>\n        { !!player.currentSong && player.status === Sound.status.PLAYING ? (\n          <button type=\"button\" onClick={pause}>\n            <img src={PauseIcon} alt=\"Shuffle\" />\n          </button>\n        ) : (\n          <button type=\"button\" onClick={play}>\n            <img src={PlayIcon} alt=\"Shuffle\" />\n          </button>\n        ) }\n        <button type=\"button\" onClick={next}>\n          <img src={ForwardIcon} alt=\"Shuffle\" />\n        </button>\n        <button type=\"button\">\n          <img src={RepeatIcon} alt=\"Shuffle\" />\n        </button>\n      </Controls>\n      <Time>\n        <span>{positionShow || position}</span>\n        <ProgressSlider>\n          <Slider\n            railStyle={{ background: '#404040', borderRadius: 10 }}\n            trackStyle={{ background: '#1ed760' }}\n            handleStyle={{ border: 0 }}\n            max={1000}\n            onChange={(value) => handlePosition(value / 1000)}\n            onAfterChange={(value) => setPosition(value / 1000)}\n            value={progress}\n          />\n        </ProgressSlider>\n        <span>{duration}</span>\n      </Time>\n    </Progress>\n    <Volume>\n      <img src={VolumeIcon} alt=\"Volume\" />\n      <Slider\n        railStyle={{ background: '#404040', borderRadius: 10 }}\n        trackStyle={{ background: '#fff' }}\n        handleStyle={{ display: 'none' }}\n        value={player.volume}\n        onChange={setVolume}\n      />\n    </Volume>\n  </Container>\n);\n\nfunction msToTime(duration) {\n  if (!duration) return null;\n  let seconds = parseInt((duration / 1000) % 60, 10);\n  const minutes = parseInt(((duration / (1000 * 60)) % 60), 10);\n\n  seconds = seconds < 10 ? `0${seconds}` : seconds;\n  return `${minutes}:${seconds}`;\n}\n\nconst mapStateToProps = (state) => ({\n  player: state.player,\n  position: msToTime(state.player.position),\n  duration: msToTime(state.player.duration),\n  positionShow: msToTime(state.player.positionShow),\n  progress: parseInt(\n    (state.player.positionShow || state.player.position) * (1000 / state.player.duration), 10,\n  ) || 0,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(PlayerActions, dispatch);\n\nPlayer.propTypes = propTypes;\nPlayer.defaultProps = {\n  player: '', position: '', duration: '', positionShow: '',\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\n","import styled from 'styled-components';\n\nimport SearchIcon from '../../assets/images/search.svg';\n\nexport const Container = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 10px 0 0;\n`;\n\nexport const Search = styled.div`\n  display: flex;\n  align-items: center;\n  border-radius: 12px;\n  height: 24px;\n  width: 200px;\n  padding: 6px 7px 6px 26px;\n  background: #fff url(${SearchIcon}) no-repeat 7px center;\n  input {\n    flex: 1;\n    font-size: 13px;\n    color: #121212;\n    border: 0;\n  }\n`;\n\nexport const User = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 13px;\n  img {\n    width: 27px;\n    height: 27px;\n    border-radius: 50%;\n    margin-right: 5px;\n  }\n`;\n","import React from 'react';\n\nimport { Container, Search, User } from './styles';\n\nconst Header = () => (\n  <Container>\n    <Search>\n      <input placeholder=\"Search\" />\n    </Search>\n    <User>\n      <img src=\"https://avatars0.githubusercontent.com/u/51303848?v=4\" alt=\"Avatar\" />\n      João Pedro\n    </User>\n  </Container>\n);\n\nexport default Header;\n","export const Types = {\n  SET: 'error/SET',\n  HIDE: 'error/HIDE',\n};\n\nconst INITIAL_STATE = {\n  visible: false,\n  message: null,\n};\n\nexport default function playlists(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Types.SET:\n      return { ...state, visible: true, message: action.payload.message };\n    case Types.HIDE:\n      return { ...state, visible: false };\n    default:\n      return state;\n  }\n}\n\nexport const Creators = {\n  setError: (message) => ({\n    type: Types.SET,\n    payload: { message },\n  }),\n  hideError: () => ({ type: Types.HIDE }),\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 42px;\n  line-height: 42px;\n  padding: 0 20px;\n  color: rgba(0, 0, 0, 0.6);\n  background-color: #f55a5a;\n  margin: 20px 0 10px;\n  font-size: 13px;\n  border-radius: 3px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  button {\n    border: 0;\n    background: transparent;\n\n    img {\n      height: 14px;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Creators as ErrorActions } from '../../store/ducks/error';\n\nimport { Container } from './styles';\nimport CloseIcon from '../../assets/images/close.svg';\n\nconst propTypes = {\n  hideError: PropTypes.func.isRequired,\n  error: PropTypes.shape({\n    visible: PropTypes.bool,\n    message: PropTypes.string,\n  }).isRequired,\n};\n\nconst ErrorBox = ({ error: { message, visible }, hideError }) => visible && (\n  <Container>\n    <p>{message}</p>\n    <button type=\"button\" onClick={hideError}>\n      <img src={CloseIcon} alt=\"Close\" />\n    </button>\n  </Container>\n);\n\nconst mapStateToProps = (state) => ({\n  error: state.error,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(ErrorActions, dispatch);\n\nErrorBox.propTypes = propTypes;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBox);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n`;\n\nexport const Content = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(to bottom, #414141 0%, #181818 100%), transparent;\n  background-size: 100% 250px, 100%;\n  background-repeat: no-repeat;\n  background-position: top;\n  padding: 0 20px;\n`;\n","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nimport { Spinner } from '../../components/Loading/styles';\n\nexport const Container = styled.div`\n  flex: 1;\n  margin-top: 110px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Title = styled.h1`\n  font-size: 48px;\n  ${Spinner} {\n    height: 24px;\n  }\n`;\n\nexport const List = styled.div`\n  margin-top: 20px;\n  display: flex;\n`;\n\nexport const Playlist = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  width: 250px;\n  text-decoration: none;\n  img {\n    height: 250px;\n  }\n  strong {\n    font-size: 13px;\n    margin-top: 10px;\n    color: #fff;\n  }\n  p {\n    line-height: 22px;\n    margin-top: 5px;\n    font-size: 13px;\n    color: #b3b3b3;\n  }\n  &:hover img {\n    opacity: 0.4;\n  }\n  &:first-child {\n    margin: 0;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Creators as PlaylistsActions } from '../../store/ducks/playlists';\n\nimport Loading from '../../components/Loading';\nimport {\n  Container, Title, List, Playlist,\n} from './styles';\n\n\nconst propTypes = {\n  getPlaylistRequest: PropTypes.func.isRequired,\n  playlists: PropTypes.shape({\n    data: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      thumbnail: PropTypes.string,\n      description: PropTypes.string,\n    })),\n    loading: PropTypes.bool,\n  }).isRequired,\n};\n\nclass Browse extends Component {\n  componentDidMount() {\n    const { getPlaylistRequest } = this.props;\n    getPlaylistRequest();\n  }\n\n  render() {\n    const { playlists } = this.props;\n    return (\n      <Container>\n        <Title>\n          Browse\n          { playlists.loading && <Loading /> }\n        </Title>\n        <List>\n          { playlists.data.map((playlist) => (\n            <Playlist key={playlist.id} to={`playlists/${playlist.id}`}>\n              <img src={playlist.thumbnail} alt={playlist.title} />\n              <strong>{playlist.title}</strong>\n              <p>\n                {playlist.description}\n              </p>\n            </Playlist>\n          )) }\n        </List>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playlists: state.playlists,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(PlaylistsActions, dispatch);\n\nBrowse.propTypes = propTypes;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Browse);\n","export const Types = {\n  GET_REQUEST: 'playlistDetails/GET_REQUEST',\n  GET_SUCESS: 'playlistDetails/GET_SUCESS',\n};\n\nconst INITIAL_STATE = {\n  data: {},\n  loading: false,\n};\n\nexport default function playlistDetails(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case Types.GET_REQUEST:\n      return { ...state, loading: true };\n    case Types.GET_SUCESS:\n      return { ...state, loading: false, data: action.payload.data };\n    default:\n      return state;\n  }\n}\n\nexport const Creators = {\n  getPlaylistDetailsRequest: (id) => ({\n    type: Types.GET_REQUEST,\n    payload: { id },\n  }),\n  getPlaylistDetailsSucess: (data) => ({\n    type: Types.GET_SUCESS,\n    payload: { data },\n  }),\n};\n","import styled, { css } from 'styled-components';\n\nimport { Spinner } from '../../components/Loading/styles';\n\nexport const Container = styled.div`\n  margin-top: 30px;\n\n  ${Spinner} {\n    height: 48px;\n  }\n\n  ${(props) => props.loading && css`\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `}\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  img {\n    width: 220px;\n    height: 220px;\n  }\n  div {\n    margin-left: 20px;\n  }\n  span {\n    font-size: 11px;\n    letter-spacing: 1.11px;\n    font-weight: 300;\n  }\n  h1 {\n    margin-top: 10px;\n    font-size: 48px;\n  }\n  p {\n    margin-top: 0;\n    color: #b3b3b3;\n    font-size: 11px;\n    letter-spacing: 1.11px;\n    text-transform: uppercase;\n  }\n  button {\n    background-color: #1db854;\n    height: 32px;\n    border-radius: 16px;\n    color: #fff;\n    line-height: 32px;\n    padding: 0 35px;\n    border: 0;\n    margin-top: 10px;\n    font-size: 12px;\n    letter-spacing: 1.11px;\n  }\n`;\n\nexport const SongList = styled.table`\n  width: 100%;\n  text-align: left;\n  margin-top: 20px;\n  thead th {\n    font-size: 11px;\n    color: #b3b3b3;\n    letter-spacing: 1.11px;\n    font-weight: normal;\n    text-transform: uppercase;\n    padding: 5px 10px;\n\n    &:last-child {\n      text-align: right;\n    }\n  }\n`;\n\nexport const SongItem = styled.tr`\n td {\n  border-top: 1px solid #282828;\n  font-size: 13px;\n  padding: 0 10px;\n  line-height: 40px;\n  background-color: ${(props) => (props.selected ? '#282828' : 'transparent')};\n  color: ${(props) => (props.playing ? '#1ed760' : '#fff')};\n  &:first-child {\n    width: 80px;\n    text-align: right;\n  }\n  &:last-child {\n    text-align: right;\n  }\n}\ntr:hover td {\n    background-color: #282828;\n}\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Creators as PlaylistDetailsActions } from '../../store/ducks/playlistDetails';\nimport { Creators as PlayerActions } from '../../store/ducks/player';\n\nimport {\n  Container, Header, SongList, SongItem,\n} from './styles';\n\nimport Loading from '../../components/Loading';\n\nimport ClockIcon from '../../assets/images/clock.svg';\nimport PlusIcon from '../../assets/images/plus.svg';\n\nconst propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n  getPlaylistDetailsRequest: PropTypes.func.isRequired,\n  playlistDetails: PropTypes.shape({\n    data: PropTypes.shape({\n      thumbnail: PropTypes.string,\n      title: PropTypes.string,\n      description: PropTypes.string,\n      songs: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number,\n        title: PropTypes.string,\n        author: PropTypes.string,\n        album: PropTypes.string,\n      })),\n    }),\n    loading: PropTypes.bool,\n  }).isRequired,\n  loadSong: PropTypes.func.isRequired,\n  currentSong: PropTypes.shape({\n    id: PropTypes.number,\n  }),\n};\n\nclass Playlist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSong: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadPlaylistDetails();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { match: { params: { id } } } = this.props;\n    if (prevProps.match.params.id !== id) {\n      this.loadPlaylistDetails();\n    }\n  }\n\n  loadPlaylistDetails = () => {\n    const { match: { params: { id } }, getPlaylistDetailsRequest } = this.props;\n    getPlaylistDetailsRequest(id);\n  }\n\n  renderDetails = () => {\n    const { playlistDetails: { data }, loadSong, currentSong } = this.props;\n    const { selectedSong } = this.state;\n    return (\n      <Container>\n        <Header>\n          <img src={data.thumbnail} alt={data.title} />\n          <div>\n            <span>Playlist</span>\n            <h1>{data.title}</h1>\n            { !!data.songs && (\n            <p>\n              {data.songs.length}\n              &nbsp; musics\n            </p>\n            ) }\n            <button type=\"button\">Play</button>\n          </div>\n        </Header>\n        <SongList cellPadding={0} cellSpacing={0}>\n          <thead>\n            <tr>\n              <th> </th>\n              <th>Title</th>\n              <th>Artist</th>\n              <th>Album</th>\n              <th><img src={ClockIcon} alt=\"Dration\" /></th>\n            </tr>\n          </thead>\n          <tbody>\n            { !data.songs ? (\n              <tr><td colSpan={5}> This playlist is empty</td></tr>\n            ) : (data.songs.map((song) => (\n              <SongItem\n                key={song.id}\n                onClick={() => this.setState({ selectedSong: song.id })}\n                onDoubleClick={() => loadSong(song, data.songs)}\n                selected={selectedSong === song.id}\n                playing={currentSong && currentSong.id === song.id}\n              >\n                <td><img src={PlusIcon} alt=\"Add\" /></td>\n                <td>{song.title}</td>\n                <td>{song.author}</td>\n                <td>{song.album}</td>\n                <td>4:20</td>\n              </SongItem>\n            ))\n            ) }\n          </tbody>\n        </SongList>\n      </Container>\n    );\n  }\n\n  render() {\n    const { playlistDetails } = this.props;\n    return playlistDetails.loading ? (\n      <Container loading=\"true\">\n        <Loading />\n      </Container>\n    ) : (\n      this.renderDetails()\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  playlistDetails: state.playlistDetails,\n  currentSong: state.player.currentSong,\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\n  { ...PlaylistDetailsActions, ...PlayerActions },\n  dispatch,\n);\n\nPlaylist.propTypes = propTypes;\nPlaylist.defaultProps = { currentSong: 0 };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlist);\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\nimport Browse from '../pages/browse';\nimport Playlist from '../pages/playlist';\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Browse} />\n    <Route path=\"/playlists/:id\" component={Playlist} />\n  </Switch>\n);\n\nexport default Routes;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://json-server-spot-api.herokuapp.com/',\n});\n\nexport default api;\n","import { call, put } from 'redux-saga/effects';\n\nimport api from '../../services/api';\n\nimport { Creators as PlaylistActions } from '../ducks/playlists';\nimport { Creators as ErrorActions } from '../ducks/error';\n\nexport function* getPlaylists() {\n  try {\n    const response = yield call(api.get, '/playlists');\n    yield put(PlaylistActions.getPlaylistSucess(response.data));\n  } catch (error) {\n    yield put(ErrorActions.setError('Playlists are not disponible'));\n  }\n}\n","import { call, put } from 'redux-saga/effects';\n\nimport api from '../../services/api';\n\nimport { Creators as PlaylistDetailsActions } from '../ducks/playlistDetails';\nimport { Creators as ErrorActions } from '../ducks/error';\n\nexport function* getPlaylistDetails(action) {\n  try {\n    const response = yield call(api.get, `/playlists/${action.payload.id}?_embed=songs`);\n    yield put(PlaylistDetailsActions.getPlaylistDetailsSucess(response.data));\n  } catch (error) {\n    yield put(ErrorActions.setError('Playlist details not disponible'));\n  }\n}\n","import { all, takeLatest } from 'redux-saga/effects';\n\nimport { Types as PlaylistsTypes } from '../ducks/playlists';\nimport { Types as PlaylistDetailsTypes } from '../ducks/playlistDetails';\n\nimport { getPlaylists } from './playlists';\nimport { getPlaylistDetails } from './playlistDetails';\n\nexport default function* rootSaga() {\n  yield all([\n    takeLatest(PlaylistsTypes.GET_REQUEST, getPlaylists),\n    takeLatest(PlaylistDetailsTypes.GET_REQUEST, getPlaylistDetails),\n  ]);\n}\n","import { combineReducers } from 'redux';\n\nimport playlists from './playlists';\nimport playlistDetails from './playlistDetails';\nimport error from './error';\nimport player from './player';\n\nexport default combineReducers({\n  playlists,\n  playlistDetails,\n  error,\n  player,\n});\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport sagas from './sagas';\nimport reducers from './ducks';\n\nconst middlewares = [];\n\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nmiddlewares.push(sagaMiddleware);\n\nconst store = process.env.NODE_ENV === 'development'\n  ? createStore(reducers, compose(applyMiddleware(...middlewares), console.tron.createEnhancer()))\n  : createStore(reducers, compose(applyMiddleware(...middlewares)));\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './config/reactotron';\nimport GlobalStyle from './styles/global';\nimport Sidebar from './components/Sidebar';\nimport Player from './components/Player';\nimport Header from './components/Header';\nimport ErrorBox from './components/ErrorBox';\nimport { Wrapper, Container, Content } from './styles/components';\n\nimport Routes from './routes';\nimport store from './store';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Provider store={store}>\n        <BrowserRouter>\n          <Wrapper>\n            <Container>\n              <Sidebar />\n              <Content>\n                <ErrorBox />\n                <Header />\n                <Routes />\n              </Content>\n            </Container>\n            <Player />\n          </Wrapper>\n        </BrowserRouter>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}